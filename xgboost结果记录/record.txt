Depths = [2,4,6,10,15]
Accuracies = [0.864, 0.8896, 0.8909, 0.8896, 0.8881]
Time_For_Each_Tree(seconds) = [0.957, 2.057, 3.215,5.713, 8.651]


To get Time_For_Each_Tree:
round(101.3987603187561/(100+1+5),3)
round(193.35744953155518/(88+1+5),3)
round(228.265531539917/(65+1+5),3)
round(337.086443901062/(53+1+5),3)
round(605.5902621746063/(64+1+5),3)

Details:
#For depth 2
Stopping. Best iteration:
[100]   train-merror:0.101729   validation-merror:0.128

Test accuracy using softmax = 0.864
101.3987603187561  seconds
[[826   0  18  41   7   1  94   0  13   0]
 [  3 957   2  26   5   0   6   0   1   0]
 [ 17   1 787   9 115   0  65   0   6   0]
 [ 21   9  14 890  28   0  36   0   2   0]
 [  0   1 107  38 784   0  68   0   2   0]
 [  0   0   0   1   0 953   0  28   2  16]
 [150   2 120  37  88   1 585   0  17   0]
 [  0   0   0   0   0  17   0 945   0  38]
 [  0   2  10   4   3   3  14   3 960   1]
 [  0   0   0   1   0   5   0  40   1 953]]

(array([0.812, 0.985, 0.744, 0.85 , 0.761, 0.972, 0.674, 0.93 , 0.956,
       0.945]), array([0.826, 0.957, 0.787, 0.89 , 0.784, 0.953, 0.585, 0.945, 0.96 ,
       0.953]), array([0.819, 0.971, 0.765, 0.87 , 0.772, 0.963, 0.626, 0.937, 0.958,
       0.949]), array([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],
      dtype=int64))

#For depth 4
Stopping. Best iteration:
[88]    train-merror:0.033917   validation-merror:0.10375

Test accuracy using softmax = 0.8896
193.35744953155518  seconds
[[853   0  12  23   3   1  99   0   9   0]
 [  1 973   1  16   2   0   5   0   2   0]
 [ 17   1 829   6  81   0  63   0   3   0]
 [ 22   4   8 902  33   0  28   0   3   0]
 [  0   0  89  32 821   0  58   0   0   0]
 [  0   0   0   1   0 971   0  16   1  11]
 [134   2  90  31  81   0 650   0  12   0]
 [  0   0   0   0   0  13   0 962   0  25]
 [  2   1   5   3   3   1   8   3 973   1]
 [  1   0   0   0   0   2   0  35   0 962]]
(array([0.828, 0.992, 0.802, 0.89 , 0.802, 0.983, 0.714, 0.947, 0.97 ,
       0.963]), array([0.853, 0.973, 0.829, 0.902, 0.821, 0.971, 0.65 , 0.962, 0.973,
       0.962]), array([0.84 , 0.982, 0.815, 0.896, 0.811, 0.977, 0.68 , 0.954, 0.972,
       0.962]), array([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],
      dtype=int64))

#For depth 6
Stopping. Best iteration:
[65]    train-merror:0.004167   validation-merror:0.098417

Test accuracy using softmax = 0.8909
228.265531539917  seconds
[[859   0  15  22   5   1  91   0   7   0]
 [  2 972   1  14   5   0   5   0   1   0]
 [ 16   0 827   8  81   0  65   0   3   0]
 [ 18   2  11 907  24   0  36   0   2   0]
 [  0   0  83  32 826   0  58   0   1   0]
 [  0   0   1   0   0 965   0  21   0  13]
 [137   2 102  25  68   0 653   0  13   0]
 [  0   0   0   0   0  11   0 964   0  25]
 [  1   1   4   4   2   2   7   4 975   0]
 [  0   0   0   0   0   6   1  32   0 961]]
(array([0.832, 0.995, 0.792, 0.896, 0.817, 0.98 , 0.713, 0.944, 0.973,
       0.962]), array([0.859, 0.972, 0.827, 0.907, 0.826, 0.965, 0.653, 0.964, 0.975,
       0.961]), array([0.845, 0.983, 0.809, 0.902, 0.821, 0.972, 0.682, 0.954, 0.974,
       0.961]), array([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],
      dtype=int64))

#For depth 10
[58]    train-merror:0  validation-merror:0.105333
Stopping. Best iteration:
[53]    train-merror:0  validation-merror:0.10525

Test accuracy using softmax = 0.8896
337.086443901062  seconds
[[864   0  17  24   3   1  84   0   7   0]
 [  2 961   3  24   4   0   4   0   2   0]
 [ 12   0 832  11  82   0  61   0   2   0]
 [ 15   2  12 920  22   0  27   0   2   0]
 [  0   0  92  33 817   0  57   0   1   0]
 [  0   0   1   0   0 965   0  22   1  11]
 [136   2 105  30  77   0 634   0  16   0]
 [  0   0   0   0   0   8   0 968   0  24]
 [  1   1   4   4   3   1   7   3 975   1]
 [  0   0   0   0   0   5   0  34   1 960]]
(array([0.839, 0.995, 0.78 , 0.88 , 0.811, 0.985, 0.725, 0.943, 0.968,
       0.964]), array([0.864, 0.961, 0.832, 0.92 , 0.817, 0.965, 0.634, 0.968, 0.975,
       0.96 ]), array([0.851, 0.978, 0.805, 0.899, 0.814, 0.975, 0.677, 0.955, 0.972,
       0.962]), array([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],
      dtype=int64))

#For depth 15
[64]    train-merror:0  validation-merror:0.101
Stopping. Best iteration:
[59]    train-merror:0  validation-merror:0.100833

Test accuracy using softmax = 0.8881
605.5902621746063  seconds
[[865   0  16  23   6   1  81   0   8   0]
 [  3 969   1  19   5   0   1   0   2   0]
 [ 14   0 827   9  84   0  59   0   7   0]
 [ 19   3  12 909  24   0  29   0   4   0]
 [  1   0  84  26 826   0  61   0   2   0]
 [  0   0   0   0   0 965   1  22   1  11]
 [156   0  99  27  76   0 627   0  15   0]
 [  0   0   0   0   0  10   0 960   0  30]
 [  1   2   4   2   5   1   5   3 976   1]
 [  0   0   0   0   0   7   1  34   1 957]]
(array([0.817, 0.995, 0.793, 0.896, 0.805, 0.981, 0.725, 0.942, 0.961,
       0.958]), array([0.865, 0.969, 0.827, 0.909, 0.826, 0.965, 0.627, 0.96 , 0.976,
       0.957]), array([0.84 , 0.982, 0.81 , 0.902, 0.815, 0.973, 0.672, 0.951, 0.968,
       0.957]), array([1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],
      dtype=int64))